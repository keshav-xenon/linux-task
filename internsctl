#!/usr/bin/env bash

# Version of the command
VERSION="v0.1.0"

# Function to display help
show_help() {
    echo "Usage: internsctl [COMMAND] [OPTIONS]"
    echo ""
    echo "Commands:"
    echo "  cpu getinfo          Get CPU information (similar to lscpu)"
    echo "  memory getinfo       Get memory information (similar to free)"
    echo "  user create <name>   Create a new user"
    echo "  user list            List all regular users"
    echo "  user list --sudo-only List users with sudo permissions"
    echo "  file getinfo [options] <file-name>  Get file information"
    echo ""
    echo "Options:"
    echo "  --help               Show this help message"
    echo "  --version            Show version information"
    echo ""
    echo "File Information Options:"
    echo "  --size, -s          Print file size"
    echo "  --permissions, -p    Print file permissions"
    echo "  --owner, -o         Print file owner"
    echo "  --last-modified, -m  Print last modified time"
}

# Function to display version
show_version() {
    echo "internsctl $VERSION"
}

# Function to get file information
get_file_info() {
    local file="$1"
    local option="$2"

    if [[ ! -f "$file" ]]; then
        echo "Error: File '$file' not found."
        return 1
    fi

    case "$option" in
        --size|-s)
            stat --format="%s" "$file"
            ;;
        --permissions|-p)
            stat --format="%A" "$file"
            ;;
        --owner|-o)
            stat --format="%U" "$file"
            ;;
        --last-modified|-m)
            stat --format="%y" "$file"
            ;;
        "")
            echo "File: $(basename "$file")"
            echo "Access: $(stat --format="%A" "$file")"
            echo "Size(B): $(stat --format="%s" "$file")"
            echo "Owner: $(stat --format="%U" "$file")"
            echo "Modify: $(stat --format="%y" "$file")"
            ;;
        *)
            echo "Invalid option: $option"
            echo "Use 'internsctl --help' for usage."
            return 1
            ;;
    esac
}

# Main logic
case "$1" in
    --help)
        show_help
        ;;
    --version)
        show_version
        ;;
    cpu)
        if [[ "$2" == "getinfo" ]]; then
            lscpu
        else
            echo "Invalid command. Use 'internsctl --help' for usage."
        fi
        ;;
    memory)
        if [[ "$2" == "getinfo" ]]; then
            free -h
        else
            echo "Invalid command. Use 'internsctl --help' for usage."
        fi
        ;;
    user)
        if [[ "$2" == "create" && -n "$3" ]]; then
            sudo useradd -m "$3" && echo "User '$3' created successfully."
        elif [[ "$2" == "list" && "$3" == "--sudo-only" ]]; then
            getent group sudo | cut -d: -f4 | tr ',' '\n'
        elif [[ "$2" == "list" ]]; then
            awk -F: '($3 >= 1000 && $3 < 65534) {print $1}' /etc/passwd
        else
            echo "Invalid command. Use 'internsctl --help' for usage."
        fi
        ;;
    file)
        if [[ "$2" == "getinfo" ]]; then
            if [[ "$3" == --* || "$3" == -* ]]; then
                get_file_info "$4" "$3"
            else
                get_file_info "$3" ""
            fi
        else
            echo "Invalid command. Use 'internsctl --help' for usage."
        fi
        ;;
    *)
        echo "Invalid command. Use 'internsctl --help' for usage."
        ;;
esac
